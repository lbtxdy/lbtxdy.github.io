<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[怎样科学上网]]></title>
    <url>%2F2018%2F08%2F21%2F%E6%80%8E%E6%A0%B7%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%2F</url>
    <content type="text"><![CDATA[手把手教你科学上网前期准备购买VPS我推荐购买的是 Vultr 因为用惯了，价格也合理，当然他是个非常好的商家，有比较强大的快照(Snapshot)保存和恢复功能，这样就可以方便你不断的折腾VPS，不断的学习。 登陆他们的官网 Vultr 注册一个账号，然后就可以选择你喜欢的服务器了！接下来就是要选择你的服务器的配置了，地点无所谓，操作系统建议选 CentOS 7，因为接下来的系列操作都是在这个环境下进行的。不过如果你熟悉其他操作系统也没问题，可能有些指令或者操作会有一些不同。价格根据自己的经济状况来定，按照我的经验，选最便宜的$2.5/mo就够用了。其他的可选可不选，接下来通过支付获得你自己的服务器了。很方便的是，Vultr 支持支付宝，因此后续续费也非常方便。 配置服务器当你购买好服务器后，进入页面可以查看到你买的服务器了。 点进去查看服务器详情IP 地址和 root 密码可以点击复制，方便接下来的操作。 登陆服务器，搭建VPN登陆 如果你使用的是 MacBook 请打开终端，使用 SSH 连接到服务器即可。 如果你使用的是 Linux 系统，也不再赘述，使用 SSH 连接到服务器即可。 如果你使用的是 Windows 操作系统，建议下载 Putty 进行连接。接下来以 Windows 操作系统为例。 打开 PUTTY，进行基本配置输入你的 IP 地址，选择连接方式为 SSH，点击 OPEN 即可。login as : 输入 rootpassword : 输入你服务器的密码。注意：密码不会显示，可以粘贴进去（粘贴方式为单击鼠标右键一次），输入完后直接回车即可。如果是接下来的画面，则恭喜你成功登陆到你的 VPS 上了。 搭建VPN使用 root 登陆服务器以后，输入以下代码：123wget --no-check-certificate -O shadowsocks-go.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-go.shchmod +x shadowsocks-go.sh./shadowsocks-go.sh 2&gt;&amp;1 | tee shadowsocks-go.log 输入代码后，按回车进入安装步骤，根据下图提示进行安装安装完成后，脚本提示如下：恭喜你，VPN搭建成功，但是你现在还不能科学上网，还有需要做的部分。 卸载方法：使用 root 用户登录，运行以下命令：1./shadowsocks-go.sh uninstall 查看 VPN 状态安装完成后即已后台启动 Shadowsocks-go ，运行：1/etc/init.d/shadowsocks status 可以查看 Shadowsocks-go 进程是否已经启动。本脚本安装完成后，已将 shadowsocks-go 加入开机自启动。 使用命令： 启动：/etc/init.d/shadowsocks start 停止：/etc/init.d/shadowsocks stop 重启：/etc/init.d/shadowsocks restart 状态：/etc/init.d/shadowsocks status 多用户配置（如不需要跳过此步）使用 root 用户登录，运行以下命令：1vi /etc/shadowsocks/config.json 编辑配置文件（需要掌握 Vim 来编辑配置文件）按键盘上的I进入 INSERT 模式，删除配置文件信息，替换为多用户信息，示例：1234567891011121314&#123; "server":"149.28.231.57", "local_address": "127.0.0.1", "local_port":1080, "port_password": &#123; "8989":"password0", "9001":"password1", "9002":"password2", "9003":"password3", "9004":"password4" &#125;, "method":"aes-256-cfb", "timeout":600&#125; 其中，server 为你的 IP 地址，port_password 即为你的 VPN 端口和密码。按 ESC 键退出编辑模式，输入 :wq 保存配置文件。输入代码重启服务：1/etc/init.d/shadowsocks restart 打开防火墙（关键）以前在配置的时候总是忘记打开防火墙，导致 VPN 连不上，现在也在博客中总结一下。以 CentOS 7 为例，输入一下代码打开防火墙：12firewall-cmd --zone=public --add-port=端口号/tcp --permanentfirewall-cmd --reload 其他操作系统由于内核不同，防火墙的操作也不一样，请自行查看。 至此，shadowsocks 已经搭建成功，你可以科学上网了！（误，还没讲客户端！） 优化一键升级到最新内核以及使用 BBR 脚本来加速VPN最近，Google 开源了其 TCP BBR 拥塞控制算法，并提交到了 Linux 内核，从 4.9 开始，Linux 内核已经用上了该算法。根据以往的传统，Google 总是先在自家的生产环境上线运用后，才会将代码开源，此次也不例外。 根据实地测试，在部署了最新版内核并开启了 TCP BBR 的机器上，网速甚至可以提升好几个数量级。 使用方法使用root用户登录，运行以下命令：1wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; ./bbr.sh 安装完成后，脚本会提示需要重启 VPS，输入 y 并回车后重启。重启完成后，进入 VPS，验证一下是否成功安装最新内核并开启 TCP BBR，输入以下命令：1uname -r 查看内核版本，显示为最新版就表示 OK 了。输入：1lsmod | grep bbr 若返回 tcp_bbr 表示BBR开启成功。 客户端配置Windows用户登录 shadowsocks 网站下载客户端，解压后打开软件，进行如下配置即可。然后在你的任务栏可以看到 shadowsocks 的图标，图中圈出鼠标右键点击启动代理系统，选择全局代理现在你的电脑已经可以科学上网了！敬请享受吧！ 安卓登陆 shadowsocks-android 或者 shadowsocks-clients 下载 APK 安装，按照上面 Windows 相同的方法配置即可。 iOS手机端登陆 App Store 下载 Wingy 按照上面的配置信息进行配置就行。MacBook 登陆 shadowsocks-qt5 按照步骤来安装。 总结至此，所有步骤已经结束。通过以上步骤，你获得了一个服务器，同时能够通过服务器进行科学上网，还学会了部分服务器操作已经脚本编写能力。接下来你可以做的事情还有： 搭建自己的网盘 （上传速度太慢） 挖矿 （赚的不多） 搭建自己的其他应用 （自己写区块链发币） 其他 如果有心情，以后可能还会写一下上面的内容相关，谢谢阅读本文。:)]]></content>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018年还决定自建博客的傻尝试]]></title>
    <url>%2F2018%2F07%2F29%2F2018%E5%B9%B4%E8%BF%98%E5%86%B3%E5%AE%9A%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%82%BB%E5%B0%9D%E8%AF%95%2F</url>
    <content type="text"><![CDATA[其实这个博客不是「为了写博客」而搭建的，完全是因为我的 VPS 土豆服务器仅仅就搭了一个梯子，感觉到浪费了内存，搭网盘测试后发现网速太慢卡的没法用，才决定搭一个博客。 这个博客运行在 Vultr 美国新泽西州的土豆服务器上，Vultr 是个非常好的商家，有比较强大的快照（snapshot）保存和恢复功能，因此我才能不断的折腾 VPS 。 我当然会把这期间遇到的问题和解决方案总结一下发到博客里，但我会以后再发，很多博客的第一篇文章就是「本博客是如何搭建而成的」，然后再也没有第二篇文章，我不想步他们的后尘，因此形式上也不想这样。 言归正传，我尝试了很多 TCP 优化脚本，可是访问速度依然很忙（很大原因是我还顺便在挖矿），响应式做的不够好，电脑端浏览器使用能获得最佳体验，给各位带来的不便请谅解。 服务器主要还是用于翻墙上网，如有需要 VPN 服务的，可以联系我。: )最后，欢迎，欢迎你访问敝站。 2018/8/20 更新：为了激励自己多写文章，本站已经从我的 VPS 迁移到 GitHub 上面。原来的博客，是在 LNMP（Linux + Nginx + Mysql + Php）环境上，使用庞大的 WordPress 建站的，虽然说不是很麻烦，但是建站过程还是很繁琐，访问速度也很慢。 现在采用了小巧方便的 Hexo，同时访问速度也得到了很好的提升，也更美观。]]></content>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
</search>
